stages:
  - build:arch-specific
  - build:multi-arch
  - build:app
  - test
  - deploy

build-x86_64-image:
  stage: build:arch-specific
  tags:
    - shell-x86
  script:
    - chmod +x ./build.sh; ./build.sh

build-ppc64le-image:
  stage: build:arch-specific
  tags:
    - shell-ppc
  script:
    - chmod +x ./build.sh; ./build.sh

build-multi-arch-image:
  stage: build:multi-arch
  tags:
    - shell-ppc
  script:
    - chmod +x ./create-multi-arch.sh; ./create-multi-arch.sh

build-app-image:
  stage: build:app
  tags:
    - shell-ppc
  script:
    - chmod +x ./build_app.sh; ./build_app.sh

test-multi-arch-image-on-x86_64:
  stage: test
  tags:
    - shell-x86
  script:
    - docker pull quay.io/snehakpersistent/multi-arch-image:latest 
    - docker run --rm quay.io/snehakpersistent/multi-arch-image:latest

test-multi-arch-image-on-ppc64le:
  stage: test
  tags:
    - shell-ppc
  script:
    - docker pull quay.io/snehakpersistent/multi-arch-image:latest 
    - docker run --rm quay.io/snehakpersistent/multi-arch-image:latest

deploy-app:
  stage: deploy
  tags:
    - ssh-ppc
  script:
    - oc login -u=$username -p=$password
    - ocprojectcheck=0
    - oc project $project_name || ocprojectcheck=$?
    - echo $ocprojectcheck
    - if [[ $ocprojectcheck == 1 ]]; 
      then 
      oc new-project $project_name ;
      oc new-app --name $app_name $image:$ppc_tag ;
      fi
    - if [[ $ocprojectcheck == 0 ]]; then oc import-image $image:$ppc_tag ; fi
    - if [[ $ocprojectcheck == 1 ]]; then oc expose svc/$app_name ; fi

